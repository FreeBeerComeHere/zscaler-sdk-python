name: build

on:
  push:
    branches: [ master, develop ]
    paths-ignore:
    - '.github/**'
    - 'docs/**'
    - 'docsrc/**'
    - 'examples/**'
  pull_request:
    branches: [ master, develop ]
    paths-ignore:
    - '.github/**'
    - 'docs/**'
    - 'docsrc/**'
    - 'examples/**'
  workflow_dispatch:

jobs:
  build:

    environment:
      name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9, '3.10' ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          poetry install
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install pytest-cov
          pip install -r dev_requirements.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

      - name: Create release and publish
        id: release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 17.1.1
          extra_plugins: |
            conventional-changelog-conventionalcommits@^4.4.0
            @semantic-release/git@^9.0.0
            @semantic-release/exec@^5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
